name: Deploy modpack to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "test"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy"
  cancel-in-progress: false

env:
  PACKWIZ_COMMIT: adfe66935c410cdeebabbce702abe65fb1b90ddb
  PACKWIZ_DIR: /tmp/packwiz_artifact
  PACKWIZ: /tmp/packwiz_artifact/packwiz

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Get Packwiz
      - name: Cache Packwiz
        id: cache-packwiz
        uses: actions/cache@v4
        with:
          path: ${{ env.PACKWIZ_DIR }}
          key: packwiz-${{ env.PACKWIZ_COMMIT }}
      - if: ${{ steps.cache-packwiz.outputs.cache-hit != 'true' }}
        name: Download Packwiz
        uses: dawidd6/action-download-artifact@v8
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          repo: packwiz/packwiz
          workflow: go.yml
          name: "Linux 64-bit x86"
          path: ${{ env.PACKWIZ_DIR }}
          commit: ${{ env.PACKWIZ_COMMIT }}
          allow_forks: true
      - name: Make packwiz executable
        run: chmod +x ${{ env.PACKWIZ }}

      # Build
      - name: Build pack
        run: ${{ env.PACKWIZ }} refresh --build

      # Deploy
      - name: Configure pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pack/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4